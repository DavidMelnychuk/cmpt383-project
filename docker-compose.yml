version: '3.7'

services:
    rabbitmq:
        hostname: rabbitmq
        restart: on-failure
        image: rabbitmq:3-management
        ports:
            - "5672:5672"

    golang-server:
        hostname: golang-server
        build: ./autoML/server/
        volumes:
            - ./autoML/server:/app/src/
        ports:
            - 8080:8080
        environment:
            AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=10'
        depends_on: 
            - rabbitmq

    python-rpc:
        hostname: python-rpc
        build: ./autoML/python-rpc/
        volumes:
            - ./autoML/python-rpc:/app/src/
        ports:
            - 8501:8501
        depends_on: 
            - rabbitmq
            - golang-server
        environment:
            # Taken from https://github.com/dmaze/docker-rabbitmq-example/blob/master/docker-compose.yml
            # The location of the RabbitMQ server.  "amqp" is the protocol;
            # "rabbitmq" is the hostname.  Note that there is not a guarantee
            # that the server will start first!  Telling the pika client library
            # to try multiple times gets around this ordering issue.
            AMQP_URL: 'amqp://rabbitmq?connection_attempts=10&retry_delay=10'

    react-app:
        build: ./autoML/client/
        container_name: react-app-383
        volumes:
            - ./autoML/client:/app/src/
        ports:
            - 3000:3000 
        environment:
            - CI=true
        depends_on:
            - golang-server

    python-rest:
        build: ./autoML/python-rest/
        hostname: python-rest
        container_name: python-rest-383
        volumes:
            - ./autoML/python-rest/app:/app
        ports:
            - 5000:5000
        depends_on: 
            - python-rpc
